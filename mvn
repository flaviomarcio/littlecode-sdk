#!/bin/bash

. bash-lib.sh

export MAVEN_ARGS="$@"
export ROOT_DIR=${PWD}
export FRAMEWORKS_DIR=${ROOT_DIR}/frameworks

function projectList(){

  unset __return
  local __frameworks=(spring quarkus)

  for __framework in "${__frameworks[@]}"
  do
    local __framewor_dir="${FRAMEWORKS_DIR}/${__framework}"

    if ! [[ -d ${__framewor_dir} ]]; then
      continue;
    fi

    local __list=$(ls ${__framewor_dir} | sort)

    local __list="littlecode-core $(echo ${__list} | sed 's/littlecode-core//g')"
        local __list=(${__list})

    for __item in "${__list[@]}"
    do
      local __item_dir=${__framewor_dir}/${__item}
      if [[ -d ${__item_dir} ]]; then
        local __return="${__return} ${__item_dir}"
      fi
    done
  done


  echo ${__return}
}

function main(){

  local __list=($(projectList))

  for __item in "${__list[@]}"
  do
    cd ${ROOT_DIR}
    cd ${__item}

    echM "Building $(basename ${__item})"
    echC "  commands:"
    echY "    mvn ${MAVEN_ARGS} --quiet"

    local __pom_file=${__item}/pom.xml

    if ! [[ -f ${__pom_file}  ]]; then
      echR "      pom.xml not found, pom: ${__pom_file}"
    else
      echo $(mvn ${MAVEN_ARGS} --quiet)>/dev/null 2>&1
    fi

    # local __mvn_output=$(mvn ${MAVEN_ARGS} --quiet)
    # local __mvn_check=$(echo ${__mvn_output} | grep ERROR)
    # if [[ ${__mvn_check} != "" ]]; then
    #   echo ${__mvn_output}
    #   echR "    source build fail:"
    #   echR "    ==============================  "
    #   echR "    *******Maven build fail*******  "
    #   echR "    *******Maven build fail*******  "
    #   echR "    ==============================  "
    #   printf "${__mvn_output}"
    # fi
  done

}

main 
#projectList
