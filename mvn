#!/bin/bash

. bash-lib.sh

export MAVEN_ARGS="$@"
export ROOT_DIR=${PWD}
export LITTLECODE_PATH_SPRING=${ROOT_DIR}/spring

function projectList(){

  unset __return
  local __list=$(ls ${LITTLECODE_PATH_SPRING} | sort)

  local __list="littlecode-utils-core $(echo ${__list} | sed 's/littlecode-utils-core//g')"
  local __list="$(echo ${__list} | sed 's/littlecode-dependencies-java//g' | sort) littlecode-dependencies-java"
  local __list=(${__list})

  for __item in "${__list[@]}"
  do
    local __return="${__return} ${LITTLECODE_PATH_SPRING}/${__item}"
  done

  echo ${__return}
}

function main(){

  local __list=($(projectList))

  for __item in "${__list[@]}"
  do
    cd ${ROOT_DIR}
    cd ${__item}

    echM "Building $(basename ${__item})"
    echC "  commands:"
    echY "    mvn ${MAVEN_ARGS} --quiet"

    local __pom_file=${__item}/pom.xml

    if ! [[ -f ${__pom_file}  ]]; then
      echR "      pom.xml not found, pom: ${__pom_file}"
    else
      echo $(mvn ${MAVEN_ARGS} --quiet)>/dev/null 2>&1
    fi

    # local __mvn_output=$(mvn ${MAVEN_ARGS} --quiet)
    # local __mvn_check=$(echo ${__mvn_output} | grep ERROR)
    # if [[ ${__mvn_check} != "" ]]; then
    #   echo ${__mvn_output}
    #   echR "    source build fail:"
    #   echR "    ==============================  "
    #   echR "    *******Maven build fail*******  "
    #   echR "    *******Maven build fail*******  "
    #   echR "    ==============================  "
    #   printf "${__mvn_output}"
    # fi
  done

}

main 
